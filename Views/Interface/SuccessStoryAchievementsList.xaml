<UserControl x:Class="SuccessStory.Views.Interface.SuccessStoryAchievementsList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SuccessStory.Views.Interface"
             xmlns:converters="clr-namespace:CommonPlaynite.Converters;assembly=CommonPlaynite"
             xmlns:controls="clr-namespace:CommonPlaynite.Controls;assembly=CommonPlaynite"
             xmlns:commonshared="clr-namespace:CommonShared"
             mc:Ignorable="d" d:DesignWidth="200">

    <UserControl.Resources>
        <converters:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <commonshared:LocalDateTimeConverter x:Key="LocalDateTimeConverter" />
        <local:SetColorConverter x:Key="SetColorConverter" />
    </UserControl.Resources>

    <ListBox x:Name="lbAchievements" Loaded="LbAchievements_Loaded" Height="100"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">

        <!-- Force the style because HorizontalContentAlignment not work. -->
        <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Border x:Name="HoverRectangle" IsHitTestVisible="False" Visibility="Collapsed"
                                    Background="{DynamicResource HoverBrush}" CornerRadius="{DynamicResource ControlCornerRadius}" />
                                <Border x:Name="SelectedRectangle" IsHitTestVisible="False" Visibility="Collapsed"
                                    Background="{DynamicResource GlyphBrush}" CornerRadius="{DynamicResource ControlCornerRadius}"/>
                                <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="3,0,0,0" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="SelectedRectangle" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Visibility" Value="Visible" TargetName="SelectedRectangle" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="Selector.IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" TargetName="HoverRectangle" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Selector.IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ListBox.ItemContainerStyle>

        <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
                <controls:VirtualizingGridPanel Columns="{Binding ColDefinied}" Rows="{Binding RowDefinied}" />
            </ItemsPanelTemplate>
        </ListBox.ItemsPanel>

        <ListBox.ItemTemplate>
            <DataTemplate>
                <Grid Margin="0,5" Height="65">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="58" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Height="48" Width="48" VerticalAlignment="Top" Margin="0,5,0,0"
                                Visibility="{Binding IsGray, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image Stretch="UniformToFill"
                               Visibility="{Binding EnableRaretyIndicator, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                            <Image.Source>
                                <FormatConvertedBitmap Source="{Binding Icon}" DestinationFormat="Gray32Float"/>
                            </Image.Source>
                            <Image.OpacityMask>
                                <ImageBrush ImageSource="{Binding IconImage, IsAsync=True}" />
                            </Image.OpacityMask>
                        </Image>
                        <Image Stretch="UniformToFill" 
                               Visibility="{Binding EnableRaretyIndicator, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image.Source>
                                <FormatConvertedBitmap Source="{Binding Icon}" DestinationFormat="Gray32Float"/>
                            </Image.Source>
                            <Image.OpacityMask>
                                <ImageBrush ImageSource="{Binding IconImage, IsAsync=True}" />
                            </Image.OpacityMask>
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="15" ShadowDepth="0" Color="{Binding Percent, Converter={StaticResource SetColorConverter}}"/>
                            </Image.Effect>
                        </Image>
                    </StackPanel>

                    <StackPanel Grid.Column="0" Height="48" Width="48" VerticalAlignment="Top" Margin="0,5,0,0"
                                Visibility="{Binding IsGray, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                        <Image Stretch="UniformToFill" Source="{Binding Icon}"
                               Visibility="{Binding EnableRaretyIndicator, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                        <Image Stretch="UniformToFill" Source="{Binding Icon}" 
                               Visibility="{Binding EnableRaretyIndicator, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="15" ShadowDepth="0" Color="{Binding Percent, Converter={StaticResource SetColorConverter}}"/>
                            </Image.Effect>
                        </Image>
                    </StackPanel>

                    <Grid Grid.Column="1" Margin="10,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="130" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="{Binding Name}" Foreground="{DynamicResource TextBrush}" TextTrimming="CharacterEllipsis"
                                           MouseEnter="TextBlock_MouseEnter">
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{Binding Name}"></ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                            <TextBlock Grid.Column="1" TextAlignment="Right" Text="{Binding DateUnlock, Converter={StaticResource LocalDateTimeConverter}}"  Foreground="{DynamicResource TextBrush}" />
                        </Grid>

                        <TextBlock Grid.Row="1" Text="{Binding Description}" VerticalAlignment="Top"
                                   TextWrapping="Wrap" Foreground="{DynamicResource TextBrushDarker}" />
                    </Grid>
                </Grid>
            </DataTemplate>
        </ListBox.ItemTemplate>
    </ListBox>
</UserControl>
